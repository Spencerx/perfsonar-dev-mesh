##
# Set the directory where the database will be stored
database: /var/lib/maddash/ 

##
# Set the number of jobs that can run in parallel. Default is 20.
#jobThreadPoolSize: 20

##
# Set number of jobs that can be in queue at one time. Default is 250.
#jobBatchSize: 250

###
# Disable the job scheduler if you only want to run the REST server
#disableScheduler: 0

###
# Skips table and index rebuild at start-up. It can speed up start-up time if set to 1.
#skipTableBuild: 0

##
# Set the host where the REST server listens
serverHost: "localhost"

##
# Activate http and set the port where it listens
http: 
    port: 8881

##
# 'groups' are where you define lists of hosts. You need to provide the name of the group 
# and the list of the hosts in that group. The default example below defines two groups:
# "myOwampHosts" and "myBwctlHosts". You can define any number of other groups and give them
# any alphanumeric name. A host may belong to multiple groups.
groups:
    myOwampHosts :
        - "ps-test.ctc.grnoc.iu.edu"
        - "perfsonar-dev5.grnoc.iu.edu"
        - "antg-dev.es.net"
        - "ps-deb.es.net"
        - "psps-test2-mgmt.rrze.uni-erlangen.de"
        - "perfsonardev0.internet2.edu"
        - "ma-dev2.bldc.grnoc.iu.edu"
        
    myBwctlHosts :
        - "ps-test.ctc.grnoc.iu.edu"
        - "perfsonar-dev5.grnoc.iu.edu"
        - "antg-dev.es.net"
        - "ps-deb.es.net"
        - "psps-test2-mgmt.rrze.uni-erlangen.de"
        - "perfsonardev0.internet2.edu"
        - "ma-dev2.bldc.grnoc.iu.edu"

    smallnodetests:
        - "ps-test.ctc.grnoc.iu.edu"
        - "198.128.140.238"
        - "129.79.9.10"
 
##
# 'groupMembers' allow you to assign special properties to items in 'groups': 
#     - Set the "id" to the value used in the "group" list. This is required.
#     - Set the "label" to the name  you want displayed. This block 
#         is useful in cases where you want  a value such as an IP address or port 
#         number passed to a check but on the GUI you want a human-readable value displayed
#     - Set the "pstoolkiturl" to the URL of a perfSONAR Toolkit web page
groupMembers:
    - id: "ps-test.ctc.grnoc.iu.edu"
      label: "ps-test.ctc.grnoc.iu.edu" 
      pstoolkiturl: "http://ps-test.ctc.grnoc.iu.edu/toolkit/" 
    - id: "perfsonar-dev5.grnoc.iu.edu"
      label: "perfsonar-dev5.grnoc.iu.edu" 
      pstoolkiturl: "http://ps-test.ctc.grnoc.iu.edu/toolkit/" 
    - id: "antg-dev.es.net"
      label: "antg-dev.es.net"
      pstoolkiturl: "http://ps-test.ctc.grnoc.iu.edu/toolkit/" 
    - id: "ps-deb.es.net"
      label: "ps-deb.es.net"
      pstoolkiturl: "http://ps-test.ctc.grnoc.iu.edu/toolkit/" 
    - id: "psps-test2-mgmt.rrze.uni-erlangen.de"
      label: "psps-test2-mgmt.rrze.uni-erlangen.de"
      pstoolkiturl: "http://ps-test.ctc.grnoc.iu.edu/toolkit/" 
    - id: "perfsonardev0.internet2.edu"
      label: "perfsonardev0.internet2.edu"
      pstoolkiturl: "http://ps-test.ctc.grnoc.iu.edu/toolkit/" 
    - id: "198.128.140.238"    
      label: "bltierney-liva.es.net"
      pstoolkiturl: "http://ps-test.ctc.grnoc.iu.edu/toolkit/"
    - id: "129.79.9.10"    
      label: "daldoyle-liva.es.net"
      pstoolkiturl: "http://ps-test.ctc.grnoc.iu.edu/toolkit/"
    - id: "ma-dev2.bldc.grnoc.iu.edu"
      label: "ma-dev2.bldc.grnoc.iu.edu"
      pstoolkiturl: "http://ma-dev2.bldc.grnoc.iu.edu/toolkit/" 


##

##
# 'checks' are where you define a template for a check to execute. You'll provide a 
#  command to run, 
checks:
    # Below defines a check that alarms against the loss between the row and column host.
    # It looks at data for the last 30 minutes and runs every 30 minutes. It will go 
    # critical if there is any loss. There is no warning level.
    owampLossCheck :
        #A descriptive name of the check
        name: "Loss"
        #A description of the check
        description: "Loss from %row to %col (according to %row MA)"
        #The type of check. Other valid values are net.es.maddash.checks.NagiosCheck and
        # net.es.maddash.checks.RandomCheck.
        type: "net.es.maddash.checks.PSNagiosCheck"
        params:
            #The URL of the measurement archive. You can define templates on a per host 
            #basis here. If not defined explicitly the 'default' template will be used.
            maUrl: 
                default: "http://ps-test.ctc.grnoc.iu.edu/esmond/perfsonar/archive"
            #This is the URL to the graph script. You should be able to change the 
            #hostname(example.mydomain.local) to your toolkit hostname and leave the rest of the 
            #URL untouched. 
            graphUrl: "http://ps-test.ctc.grnoc.iu.edu/serviceTest/graphWidget.cgi?url=%maUrl&dest=%col&source=%row"
            #The Nagios command to execute. The -w and -c options define the thresholds. 
            #The -r option specifies the time range to query.
            command: "/opt/perfsonar_ps/nagios/bin/check_owdelay.pl -u %maUrl -w 0 -c 0 -r 1800 -l -p -s %row -d %col"
        #How often to run the check (in seconds)
        checkInterval: 1800
        #How often to run the check if it detects a state different than the previous 
        #state. For example, if a check has been OK for 3 days, but suddenly a critical 
        #is seen, it will try again in this number of seconds rather than waiting the full 
        #interval
        retryInterval: 300
        #The number of consecutive times a new state must be seen before it changes the 
        #color in a grid. For example, if a check has been OK for 3 days, but suddenly a 
        #critical is seen, It must be seen 2 more times before the color will change
        retryAttempts: 3
        #The maximum number of seconds a command will be allowed to run
        timeout: 60
    
    # Below defines a check that alarms against the loss between the column and row host. 
    # It just swaps the source and destination of the other OWAMP check to get data for 
    # the reverse direction. The parameters have the same meaning as the previous example
    owampLossRevCheck :
        name: "Loss Reverse"
        description: "Loss from %col to %row (according to %row MA)"
        type: "net.es.maddash.checks.PSNagiosCheck"
        params:
            maUrl: 
                default: "http://ps-test.ctc.grnoc.iu.edu/esmond/perfsonar/archive"
            graphUrl: "http://ps-test.ctc.grnoc.iu.edu/serviceTest/graphWidget.cgi?url=%maUrl&dest=%row&source=%col"
            command: "/opt/perfsonar_ps/nagios/bin/check_owdelay.pl -u %maUrl -w 0 -c 0 -r 900 -l -p -s %col -d %row"
        checkInterval: 1800
        retryInterval: 300
        retryAttempts: 3
        timeout: 60
    
    # Below defines a check that alarms on throughput reported by BWCTL from the row host 
    # to the column host. It runs every 8 hours. It alarms on average throughput for the 
    # last 24 hours. It will go to the warning (yellow) level if throughput drops below 
    # 100Mbps. It goes to critical if it drops below 10Mbps. Adjust the 'command' 
    # parameter's -w property to change the warning level and -c parameter to change the 
    # critical level. All units are in Gbps (e.g. .1 = 100Mbps).
    bwctlCheck :
        name: "Throughput"
        description: "Throughput from %row to %col (according to %row MA)"
        type: "net.es.maddash.checks.PSNagiosCheck"
        params:
            maUrl:
                default: "http://ps-test.ctc.grnoc.iu.edu/esmond/perfsonar/archive"
            graphUrl: "http://ps-test.ctc.grnoc.iu.edu/serviceTest/graphWidget.cgi?url=%maUrl&dest=%col&source=%row"
            #Adjust the -w and -c values to adjust the thresholds. The thresholds are specified in Gbps.
            command:  "/opt/perfsonar_ps/nagios/bin/check_throughput.pl -u %maUrl -w .1: -c .01: -r 86400 -s %row -d %col"
        checkInterval: 28800
        retryInterval: 600
        retryAttempts: 3
        timeout: 60
    
    # Same as the BWCTL check above but tests in the reverse direction (from the column 
    # host to the row host).
    bwctlRevCheck :
        name: "Throughput Reverse"
        description: "Throughput from %col to %row (according to %row MA)"
        type: "net.es.maddash.checks.PSNagiosCheck"
        params:
            maUrl:
                default: "http://ps-test.ctc.grnoc.iu.edu/esmond/perfsonar/archive"
            graphUrl: "http://ps-test.ctc.grnoc.iu.edu/serviceTest/graphWidget.cgi?url=%maUrl&dest=%row&source=%col"
            #Adjust the -w and -c values to adjust the thresholds. The thresholds are specified in Gbps.
            command:  "/opt/perfsonar_ps/nagios/bin/check_throughput.pl -u %maUrl -w .1: -c .01: -r 86400 -s %col -d %row"
        checkInterval: 28800
        retryInterval: 600
        retryAttempts: 3
        timeout: 60

#'grids' are where you define the two dimensional tables that get displayed. You specify 
# which host 'groups' will compose the rows and columns and the 'checks' you want run. You also
# provide some descriptive information that will be displayed
grids:
    - name: "AutoConf Small Nodes (BWCTL)"
      rows: "smallnodetests"
      columns: "smallnodetests"
      checks: 
        - "bwctlCheck"
        - "bwctlRevCheck"
      rowOrder: "alphabetical"
      colOrder: "alphabetical"
      excludeSelf: 1
      columnAlgorithm: "all" 
      statusLabels:
            ok: "Throughput >= 100Mbps"
            warning: "Throughput >= 10Mbps"
            critical: "Throughput < 10Mbps"
            unknown: "Unable to retrieve data"
            notrun: "Check has not yet run"
            #we can define a additional states here. A common one is the "scheduled even state" supported by the admin UI.
            extra:
                - value: 5
                  shortName: EVENT
                  description: "Down for maintenance"


    - name: "AutoConf Small Nodes (OWAMP)"
      rows: "smallnodetests"
      columns: "smallnodetests"
      checks: 
        - "owampLossCheck"
        - "owampLossRevCheck"
      rowOrder: "alphabetical"
      colOrder: "alphabetical"
      excludeSelf: 1
      columnAlgorithm: "all" 
      statusLabels:
            ok: "Throughput >= 100Mbps"
            warning: "Throughput >= 10Mbps"
            critical: "Throughput < 10Mbps"
            unknown: "Unable to retrieve data"
            notrun: "Check has not yet run"
            #we can define a additional states here. A common one is the "scheduled even state" supported by the admin UI.
            extra:
                - value: 5
                  shortName: EVENT
                  description: "Down for maintenance"

                    

#'dashboard' provide a way to group grids together. Grids grouped in this manner will
# be displayed on the same page together. This is a list, so you can define as many 
# dashboards as you want.
dashboards:
    #The following defines a dashboard that shows the BWCTL and OWAMP results on the same 
    # page. The 'name' parameter defines the title that will displayed on the dashboard
    - name: "AutoConfig Nodes"
      # Defines the list of grids that belong to this dashboard. Each 'name' must 
      # correspond to the name defined under the 'grids' sections of this config file. 
      grids:
        - name: "AutoConf Small Nodes (OWAMP)"
        - name: "AutoConf Small Nodes (BWCTL)"
